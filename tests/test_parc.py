# the inclusion of the tests module is not meant to offer best practices for
# testing in general, but rather to support the `find_packages` example in
# setup.py that excludes installing the "tests" package
#
# Authors: A. Bemporad

import unittest
import numpy as np
from pyparc.parc import PARC


class Test_parc(unittest.TestCase):

    def test_fit_model(self):
        """
        test if PARC.fit can retrieve a simple PWA model
        """

        lb = np.array([-1.0, -1.0])
        ub = np.array([1.0, 1.0])
        pwafun = lambda x: (x[:,0]+x[:,1])*(x[:,1]>=0.) + (x[:,0]-x[:,1])*(x[:,1]<0.)
        N=1000
        X=np.random.rand(N,2)*(ub-lb)+lb
        Y=pwafun(X)

        key = 2
        np.random.seed(key)  # rng default for reproducibility
        ####################################################################################
        print("Fit PWA function to data generated by a PWA function")

        predictor = PARC(K=2, alpha=1.0e-6, maxiter=15)  # initialize PARC object

        # fit piecewise linear predictor
        predictor.fit(X, Y)

        # make predictions on test data
        Yh, _ = predictor.predict(X)

        # compute R2 score
        score_train = predictor.score(X,Y)

        self.assertEqual(score_train>0.99999,True)

if __name__ == '__main__':
    unittest.main()
